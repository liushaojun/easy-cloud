<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.1.RELEASE</version>
  </parent>
  <groupId>com.brook</groupId>
  <artifactId>easy-cloud</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <spring-boot-admin.version>2.0.0</spring-boot-admin.version>
    <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
    <spring4all.swagger.version>1.7.0.RELEASE</spring4all.swagger.version>
    <guava.version>20.0</guava.version>
    <dozer.version>6.2.0</dozer.version>
    <disruptor.version>3.3.6</disruptor.version>
    <swagger.annotaion>1.5.14</swagger.annotaion>
    <!--Docker Image-->
    <docker.image.prefix>easy-cloud</docker.image.prefix>
  </properties>
  <modules>
    <module>ec-admin</module>
    <module>ec-discovery</module>
    <module>ec-config</module>
    <module>service</module>
    <module>ec-dashboard</module>
    <module>ec-api-gateway</module>
    <module>ec-common</module>
    <module>ec-turbine-stream</module>
  </modules>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.spring4all</groupId>
        <artifactId>swagger-spring-boot-starter</artifactId>
        <version>${spring4all.swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>com.brook</groupId>
        <artifactId>ec-common</artifactId>
        <version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger.annotaion}</version>
      </dependency>
      <dependency>
        <groupId>com.github.dozermapper</groupId>
        <artifactId>dozer-core</artifactId>
        <version>${dozer.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-dependencies</artifactId>
        <version>${spring-boot-admin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>


    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>1.3.7</version>
          <executions>
            <execution>
              <id>default</id>
              <!--绑定 package 完后 build 和 push 镜像-->
              <!--<phase>package</phase>-->
              <goals>
                <goal>build</goal>
                <goal>push</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <repository>${docker.image.prefix}/${project.artifactId}</repository>
            <!--
            docker 仓库的账号和密码
            这里不用推送到远程仓库
            -->
            <!--<username>user</username>-->
            <!--<password>password</password>-->
            <tag>${project.version}</tag>
            <buildArgs>
              <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
            </buildArgs>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>